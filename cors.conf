# $cors_enabled - "true" or "false" (required)
# $cors_allow_methods — string separated by comma (optional, default: see $cors_allow_methods_default)
# $cors_allow_headers — string separated by comma (optional, default: see $cors_allow_headers_default)
# $cors_allow_headers_force — for 'allow header' without default, string separated by comma (optional)
# $cors_allow_credentials — "true" or "false" (optional, default: false)
# $cors_allow_expose_headers — string (optional, default: <<empty>>)
# $cors_vary — string or "false" (optional, default: "Origin")
# $cors_max_age — number (optional, default: 86400)
# $cors_verbose - "true" or "false" (optional, default: false)
# $cors_debug - "true" or "false" (optional, default: false)

set $cors_preflight 'false';
set $cors_vary_default 'Origin';
set $cors_allow_origin $http_origin;
set $cors_allow_methods_default 'OPTIONS, GET, POST';
set $cors_allow_headers_default 'DNT, Authorization, Origin, X-Requested-With, X-Host, X-Request-Id, Timing-Allow-Origin, Content-Type, Accept, Content-Range, Range, Keep-Alive, User-Agent, If-Modified-Since, Cache-Control, Content-Type';
set $cors_allow_expose_headers_default '';

# Default: methods
if ($cors_allow_methods = '') {
	set $cors_allow_methods $cors_allow_methods_default;
}

# Required: headers
if ($cors_allow_headers ~ '.+') {
	set $cors_allow_headers "$cors_allow_headers_default, $cors_allow_headers";
}

# Default: headers
if ($cors_allow_headers = '') {
	set $cors_allow_headers $cors_allow_headers_default;
}

# Default: allow headers (force)
if ($cors_allow_headers_force = '') {
	set $cors_allow_headers_force '';
}

# Force: allow headers?
if ($cors_allow_headers_force ~ '.+') {
	set $cors_allow_headers $cors_allow_headers_force;
}

# Default: credentials
if ($cors_allow_credentials = '') {
	set $cors_allow_credentials 'false';
}

# Default: expose headers
if ($cors_allow_expose_headers = '') {
	set $cors_allow_expose_headers $cors_allow_expose_headers_default;
}

# Default: vary
if ($cors_vary = '') {
	set $cors_vary $cors_vary_default;
}

# Default: max age
if ($cors_max_age = '') {
	set $cors_max_age '86400';
}

# Check: Vary
if ($cors_vary = 'false') {
	set $cors_vary '';
}

# Preflight?
if ($request_method = 'OPTIONS') {
	set $cors_preflight 'true';
}

# Enabled?
if ($cors_enabled !~ '^true$') {
	set $cors_enabled 'disabled';
	set $cors_preflight 'disabled';
	set $cors_allow_credentials 'disabled';
}

# Default: debug
if ($cors_debug = '') {
	set $cors_debug 'false';
}

# Default: $cors_path
if ($cors_path = '') {
	set $cors_path '<<empty>>';
}

# Default: $cors_client
if ($cors_client = '') {
	set $cors_client '<<empty>>';
}

# Default: $cors_service
if ($cors_service = '') {
	set $cors_service '<<empty>>';
}

# Allow requested
if ($cors_enabled = 'true') {
	set $cors_allow_origin_value $cors_allow_origin;
	set $cors_vary_value $cors_vary;
}

# Preflight headers
if ($cors_preflight = 'true') {
	set $cors_allow_methods_value $cors_allow_methods;
	set $cors_allow_headers_value $cors_allow_headers;
	set $cors_allow_expose_headers_value $cors_allow_expose_headers;
	set $cors_max_age_value $cors_max_age;
}

# With credentials?
if ($cors_allow_credentials = 'true') {
	set $cors_allow_credentials_value 'true';
}

# Verbose
if ($cors_verbose = '') {
	set $cors_verbose 'false';
}

if ($cors_verbose = 'true') {
	set $cors_enabled_verbose $cors_enabled;
	set $cors_service_vebose $cors_service;
	set $cors_client_vebose $cors_client;
}

add_header X-CORS-Verbose-Enabled $cors_enabled_verbose;
add_header X-CORS-Verbose-Service $cors_service_vebose;
add_header X-CORS-Verbose-Client $cors_client_vebose;

# CORS
add_header Access-Control-Allow-Origin $cors_allow_origin_value always;
add_header Access-Control-Allow-Methods $cors_allow_methods_value;
add_header Access-Control-Allow-Headers $cors_allow_headers_value;
add_header Access-Control-Expose-Headers $cors_allow_expose_headers_value;
add_header Access-Control-Allow-Credentials $cors_allow_credentials_value;
add_header Access-Control-Max-Age $cors_max_age_value;
add_header Vary $cors_vary_value always;

# Debug
if ($cors_debug = 'true') {
	add_header X-CORS-Debug-Enabled $cors_enabled;
	add_header X-CORS-Debug-Preflight $cors_preflight;
	add_header X-CORS-Debug-Service $cors_service;
	add_header X-CORS-Debug-Client $cors_client;
	add_header X-CORS-Debug-Path $cors_path;
	add_header X-CORS-Debug-Http-Origin $http_origin;
	add_header X-CORS-Debug-Request "$scheme://$host$request_uri";
	add_header X-CORS-Debug-Request-Method $request_method;

	add_header X-CORS-Debug-Var-Origin $cors_allow_origin;
	add_header X-CORS-Debug-Var-Methods $cors_allow_methods;
	add_header X-CORS-Debug-Var-Headers $cors_allow_headers;
	add_header X-CORS-Debug-Var-Credentials $cors_allow_credentials;
	add_header X-CORS-Debug-Var-Headers $cors_allow_expose_headers;
	add_header X-CORS-Debug-Var-Max-Age $cors_max_age;
	add_header X-CORS-Debug-Var-Vary $cors_vary;

	add_header X-CORS-Debug-Hr "---------------------------";

	add_header X-CORS-Debug-Access-Control-Allow-Origin $cors_allow_origin_value;
	add_header X-CORS-Debug-Access-Control-Allow-Methods $cors_allow_methods_value;
	add_header X-CORS-Debug-Access-Control-Allow-Headers $cors_allow_headers_value;
	add_header X-CORS-Debug-Access-Control-Allow-Credentials $cors_allow_credentials_value;
	add_header X-CORS-Debug-Access-Control-Expose-Headers $cors_allow_expose_headers_value;
	add_header X-CORS-Debug-Access-Control-Max-Age $cors_max_age_value;
	add_header X-CORS-Debug-Vary $cors_vary;

	add_header X-CORS-Debug-Hr "---------------------------";

	return 204;
}

# Preflight
if ($cors_preflight = 'true') {
	return 204;
}
